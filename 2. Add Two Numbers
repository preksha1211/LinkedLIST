/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy=new ListNode(-1);
        ListNode temp=dummy;
        ListNode temp1=l1;
        ListNode temp2=l2;
        int sum=0;
        int carry=0;
        while(temp1!=null&&temp2!=null){
            sum=temp1.val+temp2.val+carry;
            int digit=sum%10;
            carry=sum/10;
            ListNode nn=new ListNode(digit);
            temp.next=nn;
            temp=temp.next;
            temp1=temp1.next;
            temp2=temp2.next;
        }
         while(temp1!=null){
            sum=temp1.val+carry;
            int digit=sum%10;
            carry=sum/10;
            ListNode nn=new ListNode(digit);
            temp.next=nn;
            temp=temp.next;
            temp1=temp1.next;
            
        }
        while(temp2!=null){
            sum=temp2.val+carry;
            int digit=sum%10;
            carry=sum/10;
            ListNode nn=new ListNode(digit);
            temp.next=nn;
            temp=temp.next;
            temp2=temp2.next;
            
        }
        if(carry==1){
             ListNode nn=new ListNode(1);
             temp.next=nn;
        }
        return dummy.next;
       
    }
}
